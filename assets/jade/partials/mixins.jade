mixin media-list-item(image, videoLength, caption, time)
    .media-list__item
        .media-list__item-inner
            .media-preview
                .media-preview__viewport
                    img(src='#{image}' alt='')
                    .media-preview__video-length-label #{videoLength}
                .media-preview__description
                    .media-preview__caption
                        - for(var i=0; i<caption.length; i++) {
                        p #{caption[i]}
                        - }
                    - if(time) {
                    .media-preview__posttime #{time}
                    - }

mixin step-block(content, className)
    .step-block(class='#{className}')
        .inner #{content}


mixin ruler(title, labelLeft, labelRight, progressValue, progressColor, linked)
    .ruler
        .content-section__inner
            - if(linked == true) {
                a(href='#').ruler-title.text-center #{title}
            - } else {
                .ruler-title.text-center #{title}
            - }
            .ruler-toolbar
                .ruler-toolbar-cell
                    .ruler-label #{labelLeft}
                .ruler-toolbar-cell
                    .ruler-label #{labelRight}
            .ruler-chart
                .ruler-chart-status(style='width:#{progressValue};background:#{progressColor}')

mixin rulerGeography(title, labelRight, date, value)
    .ruler
        .content-section__inner
            .ruler-toolbar
                .ruler-toolbar-cell
                    .ruler-title #{title}
                .ruler-toolbar-cell
                    .ruler-label #{labelRight}
            ul.ruler-list
                li
                    .prop-label Дата: #{date}

                li
                    .prop-label Значение:
                    .value-label #{value}


mixin rulerPortfolio(title, labelProp, labelValue)
    .ruler
        .content-section__inner
            .ruler-title.text-left #{title}
            ul.ruler-list
                li
                    .prop-label #{labelProp}: #{labelValue}


mixin rulerListed(options)
    .ruler
        .content-section__inner
            - if(options.title) {
                .ruler-title(class= options.titleClass ) #{options.title}
            - }
            - if(options.list) {
                ul.ruler-list
                    - for(var item = 0; item < options.list.length; ++item) {
                    li
                        .prop-label #{options.list[item]['prop']}
                        .value-label #{options.list[item]['value']}
                    - }
            - }
            - if(options.listTabled) {
                ul.ruler-list(class= options.rulerListInline ? '' : 'ruler-list_tabled' )
                    - for(var item = 0; item < options.listTabled.length; ++item) {
                    li
                        .prop-label #{options.listTabled[item]['prop']}
                        .value-label #{options.listTabled[item]['value']}
                    - }
            - }
            - if(options.button) {
                button.btn-grey.fontSizeBase #{options.button}
            - }


mixin rulerListedMultiple(options)
    - if(options.header) {
        .content-section.content-custom-padding.bg-darker
            .content-section__inner
                p.fontDefault.margin0 #{options.header}
    - }
    - if(options.content) {
    - for(var content = 0; content < options.content.length; ++content) {
        .ruler
            .content-section__inner
                - if(options.content[content].title) {
                    .ruler-title #{options.content[content].title}
                - }
                - if(options.content[content].list) {
                    ul.ruler-list.ruler-list_tabled
                        - for(var item = 0; item < options.content[content].list.length; ++item) {
                            li
                                .prop-label
                                    - if(options.content[content].list[item]['prop'].prop) {
                                        span.m-prop(class= options.content[content].list[item]['prop'].propClass ) #{options.content[content].list[item]['prop'].prop}
                                    - }
                                    - if(options.content[content].list[item]['prop'].value) {
                                        span.m-value #{options.content[content].list[item]['prop'].value}
                                    - }
                                    - if(options.content[content].list[item]['prop'].megaValue) {
                                        span.m-megaValue #{options.content[content].list[item]['prop'].megaValue}
                                    - }
                                .value-label
                                    - if(options.content[content].list[item]['value'].prop) {
                                        span.m-prop #{options.content[content].list[item]['value'].prop}
                                    - }
                                    - if(options.content[content].list[item]['value'].value) {
                                        span.m-value #{options.content[content].list[item]['value'].value}
                                    - }
                                    - if(options.content[content].list[item]['value'].megaValue) {
                                        span.m-megaValue #{options.content[content].list[item]['value'].megaValue}
                                    - }
                        - }
                - }
    - }
    - }




mixin btnBlock(options)
    a(href='#').btn-block.strict
        - if(options.left) {
            .cell.cellIconLeft
                - if(options.left) {
                    - if(options.iconBalled) {
                        .iconBalled
                            img(src='/assets/img/#{options.left}')
                    - } else {
                        img(src='/assets/img/#{options.left}')
                    - }
                - }

        - }
        .cell.cellTitle
            | #{options.title}
            - if(options.download) {
                .block-link
                    +linkDownload(options.linked)
            - }
        - if(options.right) {
            .cell.cellIconRight
                img(src='/assets/img/#{options.right}')
        - }


mixin rulerCelled(options)
    a(href='#').ruler
        .content-section__inner
            .label-tabled.strict
                - if(options.left) {
                    .cell.cellIconLeft
                        img(src='/assets/img/#{options.left}')
                - }
                - if(options.title) {
                    .cell.cellTitle(class='#{options.titleClassName}') #{options.title}
                - }
                - if(options.right) {
                    .cell.cellIconRight
                        div(class='#{options.right}')
                - }


mixin sliderNav(options)
    .content-section.bg-dark
        .content-section__inner
            .slider-nav.strict
                - if(options.left) {
                a(href='#').cell.cellIconLeft
                    img(src='/assets/img/#{options.left}')
                - }
                .cell.cellTitle.text-center #{options.title}
                - if(options.right) {
                a(href='#').cell.cellIconRight
                    img(src='/assets/img/#{options.right}')
                - }


mixin linkDownload(options)
    - if(!options.linked) {
        a(href='#').link-text-small Скачать
    - } else {
        span.link-text-small Скачать
    - }



mixin docsReview(options)
    .ruler
        .content-section__inner
            .docs-review
                - if(options.left) {
                .cell.cellIconLeft
                    img(src='/assets/img/#{options.left}')
                - }
                .cell.cellTitle
                    | #{options.title}
                    - if(options.download) {
                        .block-link
                            +linkDownload(true)
                    - }
                - if(options.right) {
                .cell.cellIconRight
                    img(src='/assets/img/#{options.right}')
                - }



